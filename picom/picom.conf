# the portage compton is no longer maintained, definitely has a memory leak when shadows are enabled
# new fork has new dependencies and syntax (uthash, libxdg-basedir)
#
# [ 06/15/2019 14:37:33.971 parse_config_libconfig WARN ] Option `no-dock-shadow` is deprecated, and will be removed. Please use the wintype option `shadow` of `dock` instead.
# [ 06/15/2019 14:37:33.971 parse_config_libconfig WARN ] Option `no-dnd-shadow` is deprecated, and will be removed. Please use the wintype option `shadow` of `dnd` instead.
# [ 06/15/2019 14:37:33.971 parse_config_libconfig WARN ] Option `menu-opacity` is deprecated, and will be removed.Please use the wintype option `opacity` of `popup_menu` and `dropdown_menu` instead.
# [ 06/15/2019 14:37:33.971 parse_config_libconfig WARN ] vsync option will take a boolean from now on. "opengl-mswc" is interpreted as "true" for compatibility, but this will stop working soon
# [ 06/15/2019 14:37:33.971 parse_config_libconfig WARN ] glx-swap-method has been deprecated since v6, your setting "undefined" should be removed.
# [ 06/15/2019 14:37:33.971 parse_config_libconfig WARN ] "clear-shadow" is removed as an option, and is always enabled now. Consider removing it from your config file
# [ 06/15/2019 14:37:33.971 parse_config_libconfig WARN ] "paint-on-overlay" has been removed as an option, and is enabled whenever possible
# [ 06/15/2019 14:37:33.971 parse_config_libconfig WARN ] "alpha-step" has been removed, compton now tries to make use of all alpha values

# glx >> xrender
backend = "glx";

opacity-rule = [ "99:class_g = 'konsole'" ];

#################################
#
# Shadows
#
#################################

# Enabled client-side shadows on windows.
#shadow = true; #seems to cause a memory leak or lag
shadow = false;
# The blur radius for shadows. (default 12)
shadow-radius = 5;
# The left offset for shadows. (default -15)
shadow-offset-x = -8;
# The top offset for shadows. (default -15)
shadow-offset-y = -8;
# The translucency for shadows. (default .75)
shadow-opacity = 0.75;

# Set if you want different colour shadows
shadow-red   =   0.0;
shadow-green =   0.0;
shadow-blue  =   0.0;
# shadow-red   = 128.0;
# shadow-green = 128.0;
# shadow-blue  = 128.0;

shadow-exclude = [ "name = 'Notification'", "class_g = 'Conky'", "class_g ?= 'Notify-osd'", "class_g = 'Cairo-clock'" , "class_g = 'Rofi'" , "class_g = 'slop'"];

# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = false;

#################################
#
# Opacity
#
#################################

inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;

# Dim inactive windows. (0.0 - 1.0)
# inactive-dim = 0.1;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
# Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
blur-background = true;
# Blur background of opaque windows with transparent frames as well.
blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = false;
blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'"
];

# enum blur_method {
# 	BLUR_METHOD_NONE = 0,
# 	BLUR_METHOD_KERNEL,
# 	BLUR_METHOD_BOX,
# 	BLUR_METHOD_GAUSSIAN,
# 	BLUR_METHOD_INVALID,
# };

blur: {
  method: "kernel";
  kernel_count: 25;
}

#blur: {
#  method: "gaussian";
#  size: 5;
#  deviation: 3;
#}
# blur:
# {
#   method = "gaussian";
#   size = 10;
#   deviation = 5.0;
# };
#blur-kern = "3x3box";

#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = false;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 4;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
focus-exclude = [ "class_g = 'Cairo-clock'" ];

#################################
#
# Other
#
#################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR extension.
refresh-rate = 0;

vsync = "opengl-swc";

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;

detect-transient = true;
detect-client-leader = true;
invert-color-include = [ ];
glx-copy-from-front = false;

#################################
#
# Window type settings
#
#################################

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
};
